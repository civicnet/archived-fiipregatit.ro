---
- include_tasks: "{{ include_path }}"
  with_items: "{{ deploy_update_before | default([]) }}"
  loop_control:
    loop_var: include_path
  tags: deploy-update-before

- name: Add known_hosts
  known_hosts:
    name: "{{ item.name }}"
    key: "{{ item.key | default(omit) }}"
    path: "{{ item.path | default(omit) }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ known_hosts | default([]) }}"

- name: Check whether project source path is a git repo
  stat:
    path: "{{ project_source_path }}/.git"
  register: git_project

- name: Get current git remote URL
  command: git config --get remote.origin.url
  args:
    chdir: "{{ project_source_path }}"
  register: remote_origin_url
  when: git_project.stat.exists
  changed_when: false

- name: Update git remote URL
  command: git remote set-url origin {{ project_git_repo }}
  args:
    chdir: "{{ project_source_path }}"
  when: git_project.stat.exists and remote_origin_url.stdout != project_git_repo

- name: Clone project files
  git:
    repo: "{{ project_git_repo }}"
    dest: "{{ project_source_path }}"
    version: "{{ project_version }}"
    accept_hostkey: "{{ project.repo_accept_hostkey | default(repo_accept_hostkey | default(true)) }}"
  ignore_errors: true
  no_log: true
  register: git_clone

- name: Failed connection to remote repo
  fail:
    msg: |
      Git repo {{ project.repo }} cannot be accessed. Please verify the repository exists and you have SSH forwarding set up correctly.
      More info:
      > https://roots.io/trellis/docs/deploys/#ssh-keys
      > https://roots.io/trellis/docs/ssh-keys/#cloning-remote-repo-using-ssh-agent-forwarding
  when: git_clone | failed

- include_tasks: "{{ include_path }}"
  with_items: "{{ deploy_update_after | default([]) }}"
  loop_control:
    loop_var: include_path
  tags: deploy-update-after
